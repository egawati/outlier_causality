it_score is 0.8472978603872037
it_score is 0.6466271649250525
it_score is 1.9459101490553135
it_score is 1.4350845252893227
it_score is 0.10008345855698253
it_score is 1.0986122886681098
compute anomaly scores of the outlier noise -- > anomaly_scores = anomaly_scoring_func(anomaly_samples)
it_score is 1.4350845252893227
compute anomaly scores of the outlier noise -- > anomaly_scores = anomaly_scoring_func(anomaly_samples)
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
it_score is 0.3364722366212129
compute anomaly scores of the outlier noise -- > anomaly_scores = anomaly_scoring_func(anomaly_samples)
it_score is 0.8472978603872037
it_score is 0.2113090936672069
it_score is 1.0986122886681098
it_score is 0.6466271649250525
it_score is 0.10008345855698253
it_score is 1.0986122886681098
it_score is 1.9459101490553135
it_score is 1.4350845252893227
it_score is -0.0
it_score is 0.3364722366212129
it_score is 0.2113090936672069
it_score is 0.6466271649250525
it_score is 0.10008345855698253
it_score is 1.9459101490553135
it_score is 1.9459101490553135
it_score is -0.0
it_score is -0.0
it_score is 0.3364722366212129
it_score is 0.3364722366212129
it_score is 0.4795730802618862
it_score is 1.0986122886681098
it_score is 0.6466271649250525
it_score is 0.6466271649250525
it_score is -0.0
it_score is 0.10008345855698253
it_score is 0.10008345855698253
it_score is -0.0
it_score is -0.0
it_score is 0.8472978603872037
it_score is 1.9459101490553135
it_score is 0.10008345855698253
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map {(0, 0, 0, 0, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 0, 0, 0, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 0, 0, 1, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 0, 0, 1, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 0, 1, 0, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 0, 1, 0, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 0, 1, 1, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 0, 1, 1, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 1, 0, 0, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 1, 0, 0, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 1, 0, 1, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 1, 0, 1, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 1, 1, 0, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 1, 1, 0, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 1, 1, 1, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (0, 1, 1, 1, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 0, 0, 0, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 0, 0, 0, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 0, 0, 1, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 0, 0, 1, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 0, 1, 0, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 0, 1, 0, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 0, 1, 1, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 0, 1, 1, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 1, 0, 0, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 1, 0, 0, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 1, 0, 1, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 1, 0, 1, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 1, 1, 0, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 1, 1, 0, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 1, 1, 1, 0): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653]), (1, 1, 1, 1, 1): array([-1.53272299, -0.97972245, -0.87879653, -2.87389692, -0.27338826,
       -1.31266111, -1.31266111, -0.57721155, -0.23905012, -0.20585205,
       -0.70316396, -1.9935382 , -1.05314991, -1.73681835, -2.87389692,
       -0.12738044, -1.41665082, -0.0687556 , -1.2184739 , -1.73681835,
       -2.48823444, -1.73681835, -2.87389692, -0.6257059 , -0.32721291,
       -0.14258986, -0.15803418, -0.40380536, -0.87879653, -1.73681835,
       -1.41665082, -1.2184739 , -0.87879653, -1.81528997, -0.17372078,
       -1.31266111, -1.9935382 , -2.87389692, -0.23905012, -2.48823444,
       -0.40380536, -1.09198975, -2.09619235, -1.73681835, -0.57721155,
       -2.48823444, -0.32721291, -0.23905012, -0.38410029, -1.73681835,
       -0.57721155, -0.15803418, -1.2184739 , -1.41665082, -0.81676114,
       -2.33981443, -0.01337813, -0.20585205, -2.66258783, -1.2184739 ,
       -0.29100986, -2.48823444, -0.97972245, -0.27338826, -0.57721155,
       -0.15803418, -1.53272299, -1.31266111, -0.87879653, -0.0687556 ,
       -1.2184739 , -0.12738044, -1.26445901, -1.41665082, -1.2184739 ,
       -0.09763847, -0.27338826, -0.15803418, -0.46536325, -0.32721291,
       -0.20585205, -1.13239929, -0.23905012, -0.09763847, -1.664059  ,
       -2.33981443, -0.12738044, -0.40380536, -0.32721291, -0.87879653,
       -0.17372078, -0.27338826, -0.81676114, -0.87879653, -0.27338826,
       -1.53272299, -0.40380536, -1.41665082, -2.33981443, -0.87879653])}
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 1.9459101490553135
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map {(0, 0, 0, 0, 0): array([-5.70711026, -5.70711026]), (0, 0, 0, 0, 1): array([-5.70711026, -5.70711026]), (0, 0, 0, 1, 0): array([-5.70711026, -5.70711026]), (0, 0, 0, 1, 1): array([-5.70711026, -5.70711026]), (0, 0, 1, 0, 0): array([-5.70711026, -5.70711026]), (0, 0, 1, 0, 1): array([-5.70711026, -5.70711026]), (0, 0, 1, 1, 0): array([-5.70711026, -5.70711026]), (0, 0, 1, 1, 1): array([-5.70711026, -5.70711026]), (0, 1, 0, 0, 0): array([-5.70711026, -5.70711026]), (0, 1, 0, 0, 1): array([-5.70711026, -5.70711026]), (0, 1, 0, 1, 0): array([-5.70711026, -5.70711026]), (0, 1, 0, 1, 1): array([-5.70711026, -5.70711026]), (0, 1, 1, 0, 0): array([-5.70711026, -5.70711026]), (0, 1, 1, 0, 1): array([-5.70711026, -5.70711026]), (0, 1, 1, 1, 0): array([-5.70711026, -5.70711026]), (0, 1, 1, 1, 1): array([-5.70711026, -5.70711026]), (1, 0, 0, 0, 0): array([-5.70711026, -5.70711026]), (1, 0, 0, 0, 1): array([-5.70711026, -5.70711026]), (1, 0, 0, 1, 0): array([-5.70711026, -5.70711026]), (1, 0, 0, 1, 1): array([-5.70711026, -5.70711026]), (1, 0, 1, 0, 0): array([-5.70711026, -5.70711026]), (1, 0, 1, 0, 1): array([-5.70711026, -5.70711026]), (1, 0, 1, 1, 0): array([-5.70711026, -5.70711026]), (1, 0, 1, 1, 1): array([-5.70711026, -5.70711026]), (1, 1, 0, 0, 0): array([-5.70711026, -5.70711026]), (1, 1, 0, 0, 1): array([-5.70711026, -5.70711026]), (1, 1, 0, 1, 0): array([-5.70711026, -5.70711026]), (1, 1, 0, 1, 1): array([-5.70711026, -5.70711026]), (1, 1, 1, 0, 0): array([-5.70711026, -5.70711026]), (1, 1, 1, 0, 1): array([-5.70711026, -5.70711026]), (1, 1, 1, 1, 0): array([-5.70711026, -5.70711026]), (1, 1, 1, 1, 1): array([-5.70711026, -5.70711026])}
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.10008345855698253
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map {(0, 0, 0, 0, 0): array([-5.70711026, -5.70711026]), (0, 0, 0, 0, 1): array([-5.70711026, -5.70711026]), (0, 0, 0, 1, 0): array([-5.70711026, -5.70711026]), (0, 0, 0, 1, 1): array([-5.70711026, -5.70711026]), (0, 0, 1, 0, 0): array([-5.70711026, -5.70711026]), (0, 0, 1, 0, 1): array([-5.70711026, -5.70711026]), (0, 0, 1, 1, 0): array([-5.70711026, -5.70711026]), (0, 0, 1, 1, 1): array([-5.70711026, -5.70711026]), (0, 1, 0, 0, 0): array([-5.70711026, -5.70711026]), (0, 1, 0, 0, 1): array([-5.70711026, -5.70711026]), (0, 1, 0, 1, 0): array([-5.70711026, -5.70711026]), (0, 1, 0, 1, 1): array([-5.70711026, -5.70711026]), (0, 1, 1, 0, 0): array([-5.70711026, -5.70711026]), (0, 1, 1, 0, 1): array([-5.70711026, -5.70711026]), (0, 1, 1, 1, 0): array([-5.70711026, -5.70711026]), (0, 1, 1, 1, 1): array([-5.70711026, -5.70711026]), (1, 0, 0, 0, 0): array([-5.70711026, -5.70711026]), (1, 0, 0, 0, 1): array([-5.70711026, -5.70711026]), (1, 0, 0, 1, 0): array([-5.70711026, -5.70711026]), (1, 0, 0, 1, 1): array([-5.70711026, -5.70711026]), (1, 0, 1, 0, 0): array([-5.70711026, -5.70711026]), (1, 0, 1, 0, 1): array([-5.70711026, -5.70711026]), (1, 0, 1, 1, 0): array([-5.70711026, -5.70711026]), (1, 0, 1, 1, 1): array([-5.70711026, -5.70711026]), (1, 1, 0, 0, 0): array([-5.70711026, -5.70711026]), (1, 1, 0, 0, 1): array([-5.70711026, -5.70711026]), (1, 1, 0, 1, 0): array([-5.70711026, -5.70711026]), (1, 1, 0, 1, 1): array([-5.70711026, -5.70711026]), (1, 1, 1, 0, 0): array([-5.70711026, -5.70711026]), (1, 1, 1, 0, 1): array([-5.70711026, -5.70711026]), (1, 1, 1, 1, 0): array([-5.70711026, -5.70711026]), (1, 1, 1, 1, 1): array([-5.70711026, -5.70711026])}
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.4795730802618862
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map {(0, 0, 0, 0, 0): array([-5.70711026, -5.70711026]), (0, 0, 0, 0, 1): array([-5.70711026, -5.70711026]), (0, 0, 0, 1, 0): array([-5.70711026, -5.70711026]), (0, 0, 0, 1, 1): array([-5.70711026, -5.70711026]), (0, 0, 1, 0, 0): array([-5.70711026, -5.70711026]), (0, 0, 1, 0, 1): array([-5.70711026, -5.70711026]), (0, 0, 1, 1, 0): array([-5.70711026, -5.70711026]), (0, 0, 1, 1, 1): array([-5.70711026, -5.70711026]), (0, 1, 0, 0, 0): array([-5.70711026, -5.70711026]), (0, 1, 0, 0, 1): array([-5.70711026, -5.70711026]), (0, 1, 0, 1, 0): array([-5.70711026, -5.70711026]), (0, 1, 0, 1, 1): array([-5.70711026, -5.70711026]), (0, 1, 1, 0, 0): array([-5.70711026, -5.70711026]), (0, 1, 1, 0, 1): array([-5.70711026, -5.70711026]), (0, 1, 1, 1, 0): array([-5.70711026, -5.70711026]), (0, 1, 1, 1, 1): array([-5.70711026, -5.70711026]), (1, 0, 0, 0, 0): array([-5.70711026, -5.70711026]), (1, 0, 0, 0, 1): array([-5.70711026, -5.70711026]), (1, 0, 0, 1, 0): array([-5.70711026, -5.70711026]), (1, 0, 0, 1, 1): array([-5.70711026, -5.70711026]), (1, 0, 1, 0, 0): array([-5.70711026, -5.70711026]), (1, 0, 1, 0, 1): array([-5.70711026, -5.70711026]), (1, 0, 1, 1, 0): array([-5.70711026, -5.70711026]), (1, 0, 1, 1, 1): array([-5.70711026, -5.70711026]), (1, 1, 0, 0, 0): array([-5.70711026, -5.70711026]), (1, 1, 0, 0, 1): array([-5.70711026, -5.70711026]), (1, 1, 0, 1, 0): array([-5.70711026, -5.70711026]), (1, 1, 0, 1, 1): array([-5.70711026, -5.70711026]), (1, 1, 1, 0, 0): array([-5.70711026, -5.70711026]), (1, 1, 1, 0, 1): array([-5.70711026, -5.70711026]), (1, 1, 1, 1, 0): array([-5.70711026, -5.70711026]), (1, 1, 1, 1, 1): array([-5.70711026, -5.70711026])}
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is -0.0
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map {(0, 0, 0, 0, 0): array([-5.70711026, -5.70711026]), (0, 0, 0, 0, 1): array([-5.70711026, -5.70711026]), (0, 0, 0, 1, 0): array([-5.70711026, -5.70711026]), (0, 0, 0, 1, 1): array([-5.70711026, -5.70711026]), (0, 0, 1, 0, 0): array([-5.70711026, -5.70711026]), (0, 0, 1, 0, 1): array([-5.70711026, -5.70711026]), (0, 0, 1, 1, 0): array([-5.70711026, -5.70711026]), (0, 0, 1, 1, 1): array([-5.70711026, -5.70711026]), (0, 1, 0, 0, 0): array([-5.70711026, -5.70711026]), (0, 1, 0, 0, 1): array([-5.70711026, -5.70711026]), (0, 1, 0, 1, 0): array([-5.70711026, -5.70711026]), (0, 1, 0, 1, 1): array([-5.70711026, -5.70711026]), (0, 1, 1, 0, 0): array([-5.70711026, -5.70711026]), (0, 1, 1, 0, 1): array([-5.70711026, -5.70711026]), (0, 1, 1, 1, 0): array([-5.70711026, -5.70711026]), (0, 1, 1, 1, 1): array([-5.70711026, -5.70711026]), (1, 0, 0, 0, 0): array([-5.70711026, -5.70711026]), (1, 0, 0, 0, 1): array([-5.70711026, -5.70711026]), (1, 0, 0, 1, 0): array([-5.70711026, -5.70711026]), (1, 0, 0, 1, 1): array([-5.70711026, -5.70711026]), (1, 0, 1, 0, 0): array([-5.70711026, -5.70711026]), (1, 0, 1, 0, 1): array([-5.70711026, -5.70711026]), (1, 0, 1, 1, 0): array([-5.70711026, -5.70711026]), (1, 0, 1, 1, 1): array([-5.70711026, -5.70711026]), (1, 1, 0, 0, 0): array([-5.70711026, -5.70711026]), (1, 1, 0, 0, 1): array([-5.70711026, -5.70711026]), (1, 1, 0, 1, 0): array([-5.70711026, -5.70711026]), (1, 1, 0, 1, 1): array([-5.70711026, -5.70711026]), (1, 1, 1, 0, 0): array([-5.70711026, -5.70711026]), (1, 1, 1, 0, 1): array([-5.70711026, -5.70711026]), (1, 1, 1, 1, 0): array([-5.70711026, -5.70711026]), (1, 1, 1, 1, 1): array([-5.70711026, -5.70711026])}
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.10008345855698253
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.8472978603872037
it_score is 0.3364722366212129
it_score is 1.0986122886681098
it_score is 0.8472978603872037
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is -0.0
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
it_score is -0.0
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
it_score is -0.0
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.3364722366212129
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.6466271649250525
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.4795730802618862
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 0.8472978603872037
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is 1.9459101490553135
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
it_score is -0.0
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
it_score is 3.044522437723423
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
it_score is 0.10008345855698253
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0. 0. 0. 0. 0.]]
it_score is 0.4795730802618862
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 7.28022803 -0.21286324  0.87041575  0.79539312 -0.72647281]]
it_score is 0.6466271649250525
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 7.34820806  0.08720105  0.59040115  0.54783235 -0.56694176]]
it_score is -0.0
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 7.35316295 -0.17906022  0.79748277  0.68865325 -0.6535379 ]]
it_score is 1.9459101490553135
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 5.44465528 -0.09155102  0.27465307  0.45775512 -0.09155102]]
it_score is -0.0
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.21972246 0.21972246 0.58592655 1.2649883  3.4167505 ]
 [0.21972246 0.21972246 0.58592655 1.2649883  3.4167505 ]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.74252764  0.26373094  0.69998245  0.57329559 -0.2855752 ]]
it_score is 0.4795730802618862
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.23526844 0.23526844 0.23526844 1.89697131 3.10433364]
 [0.21424947 0.21772219 0.64734379 1.39736219 3.23043262]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.40598951  0.27227888  0.9802261   0.94528059 -0.60981364]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.38199144 0.73934905 1.13217925 1.72679526 1.72679526]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.6745344  0.30350882 1.23100857 1.74902924 1.74902924]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.39627021 0.63411911 0.74533425 1.28545434 2.64593234]]
the shapley_values is [[0.42654275 0.48937136 1.05801433 1.16557002 2.56761181]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.41472331 0.20289885 0.44276266 1.0792455  3.56747994]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.47957905 0.36658277 1.62031615 1.62031615 1.62031615]]
the shapley_values is [[0.44345992 0.75398538 1.50285128 1.50340684 1.50340684]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.19207653 0.2079978  0.91112284 2.19795654 2.19795654]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.35845745 0.2252846  1.16360623 1.979881   1.979881  ]]
the shapley_values is [[0.3586446  0.3586446  0.2309382  2.37944143 2.37944143]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.3459266  0.54783843 1.73867786 1.3359895  1.73867786]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.17130922 0.39640671 1.48719379 1.82610028 1.82610028]]
the shapley_values is [[0.2041914  0.22693031 1.21609682 2.02994587 2.02994587]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.62814515 0.55392623 0.57185218 1.97659335 1.97659335]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.21972246 0.36335013 0.80835049 2.15784359 2.15784359]]
the shapley_values is [[0.21972246 0.36837173 0.48052914 2.22441478 2.41407215]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.69490097 0.2334443  1.59292166 1.59292166 1.59292166]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.73966159 0.99631078 1.8298059  0.3115261  1.8298059 ]]
the shapley_values is [[0.30882681 1.02294436 1.45844637 1.45844637 1.45844637]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.21972246 0.49437553 0.66465074 2.16418077 2.16418077]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.20289885 0.41472331 0.16033004 1.35927768 3.56988038]]
the shapley_values is [[0.21972246 0.21972246 0.21972246 1.70918504 3.33875786]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.22760208 0.20790302 0.82317858 2.22421329 2.22421329]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.22806275 0.21972246 0.82267697 2.03736279 2.3992853 ]]
the shapley_values is [[0.23733155 0.21972246 0.8155319  2.21726218 2.21726218]]
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
Not supported functional model
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.73391962 0.78641145 1.18191004 1.50243458 1.50243458]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.33477836 0.21972246 1.21919235 1.96670855 1.96670855]]
the shapley_values is [[0.58004355 0.32260833 1.48272695 1.66086572 1.66086572]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.2254316  0.35860445 1.17268275 1.97519573 1.97519573]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.2728374  0.40503984 1.32485073 1.85219115 1.85219115]]
the shapley_values is [[0.2774659  0.40782913 1.35634801 1.83273361 1.83273361]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.21972246 0.21972246 0.21972246 2.43314278 2.61480011]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.64554272 0.64554272 1.47200828 1.47200828 1.47200828]]
the shapley_values is [[1.15314659 0.32188758 1.41069203 1.41069203 1.41069203]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.72514245 0.58323322 1.38209702 1.50831879 1.50831879]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.68709386 0.40805381 0.79528777 1.48170475 2.33497007]]
the shapley_values is [[0.67444066 0.50597737 0.90521332 1.81073946 1.81073946]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.21915747 0.17800113 0.34399024 2.00690832 2.95905309]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.51707497 0.96178898 1.40830432 1.409971   1.409971  ]]
the shapley_values is [[0.54797564 0.98413832 1.26685059 1.45407286 1.45407286]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.4823555  0.3458391  1.05816445 1.91037561 1.91037561]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.54502081 0.28598965 1.28892994 1.79358493 1.79358493]]
the shapley_values is [[0.8622813  0.31966162 1.22548962 1.64983886 1.64983886]]
it_score is -0.0
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.23420889 0.3598448  0.82794318 1.85996278 2.42515061]
 [0.34948382 0.23569859 0.69013666 1.56566291 2.86612829]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 5.35028845 -0.02554128  0.81826127  0.49462597 -0.64367298]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.37958534 0.21866997 0.89709094 2.10588201 2.10588201]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.44580956 0.71336772 1.17419318 1.6868699  1.6868699 ]]
the shapley_values is [[0.96562544 0.47133477 1.42338335 1.42338335 1.42338335]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.32188758 0.32060551 1.40919198 1.8277126  1.8277126 ]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.45142728 0.23228818 1.34563032 1.83888224 1.83888224]]
the shapley_values is [[0.35983263 0.22349784 1.14025417 1.99176282 1.99176282]]
Not supported functional model
Not supported functional model
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.21840215 0.22872461 1.36614035 1.94692158 1.94692158]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.22088791 1.04994507 1.32172901 1.55727413 1.55727413]]
the shapley_values is [[0.33603272 1.02283081 1.1751915  1.58652762 1.58652762]]
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.25665524 0.18588321 0.67720469 2.11486464 2.47250248]
 [0.25514859 0.22274278 0.25899543 2.06708608 2.90313738]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.45447443  0.19988053  0.98081756  0.86842114 -0.50963223]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.56013075 1.01538483 1.34521026 1.39319221 1.39319221]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[1.21081212 0.68886099 0.3810834  1.70318146 1.7231723 ]]
the shapley_values is [[0.85621855 0.41397071 0.40876068 2.01408016 2.01408016]]
it_score is 1.4350845252893227
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.21298478 0.21972246 0.38005476 1.90231598 2.99203228]
 [0.24578531 0.22342998 0.7057572  1.99017656 2.54196122]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[4.90522729e+00 2.76874000e-01 4.57579470e-01 3.50815933e-01
  3.46473237e-03]]
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.25665524 0.18588321 0.67720469 2.11486464 2.47250248]
 [0.25514859 0.22274278 0.25899543 2.06708608 2.90313738]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.45447443  0.19988053  0.98081756  0.86842114 -0.50963223]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.56013075 1.01538483 1.34521026 1.39319221 1.39319221]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[1.21081212 0.68886099 0.3810834  1.70318146 1.7231723 ]]
the shapley_values is [[0.85621855 0.41397071 0.40876068 2.01408016 2.01408016]]
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.25665524 0.18588321 0.67720469 2.11486464 2.47250248]
 [0.25514859 0.22274278 0.25899543 2.06708608 2.90313738]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.45447443  0.19988053  0.98081756  0.86842114 -0.50963223]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.56013075 1.01538483 1.34521026 1.39319221 1.39319221]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[1.21081212 0.68886099 0.3810834  1.70318146 1.7231723 ]]
the shapley_values is [[0.85621855 0.41397071 0.40876068 2.01408016 2.01408016]]
Not supported functional model
Not supported functional model
Not supported functional model
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.65385195 0.19239527 1.62028768 1.62028768 1.62028768]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.20519301 0.21972246 0.91194752 2.18512364 2.18512364]]
the shapley_values is [[0.21972246 0.21972246 0.86835917 2.19965309 2.19965309]]
it_score is 1.0986122886681098
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.21972246 0.21972246 0.72250462 2.20275641 2.34240431]
 [0.23654607 0.23654607 0.44243769 1.98350688 2.80807355]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 5.33009618 -0.10485824  0.70187205  0.73071669 -0.66386525]]
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.25665524 0.18588321 0.67720469 2.11486464 2.47250248]
 [0.25514859 0.22274278 0.25899543 2.06708608 2.90313738]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.45447443  0.19988053  0.98081756  0.86842114 -0.50963223]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.56013075 1.01538483 1.34521026 1.39319221 1.39319221]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.85621855 0.41397071 0.40876068 2.01408016 2.01408016]]
the shapley_values is [[1.21081212 0.68886099 0.3810834  1.70318146 1.7231723 ]]
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.47343855 0.47343855 1.33371815 2.8630528  2.8630528 ]]
the shapley_values is [[0.4733638  0.4733638  1.31354043 2.87321641 2.87321641]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
shapley_config ShapleyApproximationMethods.AUTO
total number of subsets/permutation is 32
shapley_config.n_jobs -1
subset_to_result_map  use set_func that is in anomaly_scores module line 208
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.4733638  0.4733638  1.31354043 2.87321641 2.87321641]]
the shapley_values is [[0.47343855 0.47343855 1.33371815 2.8630528  2.8630528 ]]
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.4733638  0.4733638  1.31354043 2.87321641 2.87321641]]
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.47343855 0.47343855 1.33371815 2.8630528  2.8630528 ]]
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.25665524 0.18588321 0.67720469 2.11486464 2.47250248]
 [0.25514859 0.22274278 0.25899543 2.06708608 2.90313738]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.45447443  0.19988053  0.98081756  0.86842114 -0.50963223]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.56013075 1.01538483 1.34521026 1.39319221 1.39319221]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


the shapley_values is [[1.21081212 0.68886099 0.3810834  1.70318146 1.7231723 ]]
now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.85621855 0.41397071 0.40876068 2.01408016 2.01408016]]
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.47343855 0.47343855 1.33371815 2.8630528  2.8630528 ]]
the shapley_values is [[0.4733638  0.4733638  1.31354043 2.87321641 2.87321641]]
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.25665524 0.18588321 0.67720469 2.11486464 2.47250248]
 [0.25514859 0.22274278 0.25899543 2.06708608 2.90313738]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.45447443  0.19988053  0.98081756  0.86842114 -0.50963223]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.56013075 1.01538483 1.34521026 1.39319221 1.39319221]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.85621855 0.41397071 0.40876068 2.01408016 2.01408016]]
the shapley_values is [[1.21081212 0.68886099 0.3810834  1.70318146 1.7231723 ]]
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.47343855 0.47343855 1.33371815 2.8630528  2.8630528 ]]
the shapley_values is [[0.4733638  0.4733638  1.31354043 2.87321641 2.87321641]]
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.25665524 0.18588321 0.67720469 2.11486464 2.47250248]
 [0.25514859 0.22274278 0.25899543 2.06708608 2.90313738]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.45447443  0.19988053  0.98081756  0.86842114 -0.50963223]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.56013075 1.01538483 1.34521026 1.39319221 1.39319221]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
shapley_config ShapleyApproximationMethods.AUTO
total number of subsets/permutation is 32
shapley_config.n_jobs -1
subset_to_result_map  use set_func that is in anomaly_scores module line 208
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[1.21081212 0.68886099 0.3810834  1.70318146 1.7231723 ]]
the shapley_values is [[0.85621855 0.41397071 0.40876068 2.01408016 2.01408016]]
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.47343855 0.47343855 1.33371815 2.8630528  2.8630528 ]]
the shapley_values is [[0.4733638  0.4733638  1.31354043 2.87321641 2.87321641]]
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.25665524 0.18588321 0.67720469 2.11486464 2.47250248]
 [0.25514859 0.22274278 0.25899543 2.06708608 2.90313738]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[ 4.45447443  0.19988053  0.98081756  0.86842114 -0.50963223]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[0.56013075 1.01538483 1.34521026 1.39319221 1.39319221]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
all_subsets is [(0, 0, 0, 0, 0), (0, 0, 0, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1), (0, 0, 1, 0, 0), (0, 0, 1, 0, 1), (0, 0, 1, 1, 0), (0, 0, 1, 1, 1), (0, 1, 0, 0, 0), (0, 1, 0, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1), (0, 1, 1, 0, 0), (0, 1, 1, 0, 1), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1), (1, 0, 0, 0, 0), (1, 0, 0, 0, 1), (1, 0, 0, 1, 0), (1, 0, 0, 1, 1), (1, 0, 1, 0, 0), (1, 0, 1, 0, 1), (1, 0, 1, 1, 0), (1, 0, 1, 1, 1), (1, 1, 0, 0, 0), (1, 1, 0, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1), (1, 1, 1, 0, 0), (1, 1, 1, 0, 1), (1, 1, 1, 1, 0), (1, 1, 1, 1, 1)]
total number of subsets/permutation is 32
subset_to_result_map  use set_func that is in anomaly_scores module line 208
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the value of each permutation in the subset_to_result_map is the outlier score of the outlier noise in each permutation


now use the subset_to_result_map to compute shapley_values
the shapley_values is [[1.21081212 0.68886099 0.3810834  1.70318146 1.7231723 ]]
the shapley_values is [[0.85621855 0.41397071 0.40876068 2.01408016 2.01408016]]
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
estimate_shapley_values
shapley_config.n_jobs -1
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
estimate_shapley_values
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
shapley_config.n_jobs -1
Not supported functional model
it_score is 0.2113090936672069
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
estimate_shapley_values
shapley_config ShapleyApproximationMethods.AUTO
shapley_config.n_jobs -1
